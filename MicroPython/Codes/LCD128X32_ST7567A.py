# Video https://youtu.be/CVvuWSOPLmE
# Post http://kontakts.ru/showthread.php/40884?p=86172#post86172
import machine
import time
cursor = [0, 0]
# Ваш шрифт MyASCII
MyASCII = {
' ': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
'!': [0x00, 0x18, 0x18, 0x3c, 0x3c, 0x18, 0x18, 0x00],
'"': [0x00, 0x00, 0x00, 0x00, 0x24, 0x66, 0x66, 0x00],
'#': [0x00, 0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x00],
'%': [0x00, 0xc6, 0x66, 0x30, 0x18, 0xcc, 0xc6, 0x00],
'&': [0x00, 0x76, 0xdc, 0x38, 0x76, 0x38, 0x6c, 0x00],
"'": [0x00, 0x00, 0x30, 0x18, 0x18, 0x00, 0x00, 0x00],
'(': [0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0c],
')': [0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x18, 0x30],
'*': [0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00],
'+': [0x00, 0x08, 0x08, 0x7F, 0x08, 0x08, 0x00, 0x00],
'-': [0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00],
'.': [0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00],
'/': [0x00, 0x80, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06],
'0': [0x3e, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x00],
'1': [0x00, 0x42, 0x7f, 0x40, 0x00, 0x00, 0x00, 0x00],
'2': [0x42, 0x61, 0x51, 0x49, 0x46, 0x00, 0x00, 0x00],
'3': [0x21, 0x41, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00],
'4': [0x18, 0x14, 0x12, 0x7f, 0x10, 0x00, 0x00, 0x00],
'5': [0x27, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00, 0x00],
'6': [0x3e, 0x49, 0x45, 0x45, 0x39, 0x00, 0x00, 0x00],
'7': [0x01, 0x61, 0x19, 0x06, 0x01, 0x00, 0x00, 0x00],
'8': [0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00],
'9': [0x06, 0x49, 0x49, 0x49, 0x3e, 0x00, 0x00, 0x00],
':': [0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00],
';': [0x00, 0x18, 0x00, 0x18, 0x18, 0x0c, 0xc6, 0x7c],
'<': [0x00, 0x06, 0x0c, 0x18, 0x30, 0x18, 0x0c, 0x06],
'=': [0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00],
'>': [0x00, 0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60],
'?': [0x00, 0x18, 0x00, 0x18, 0x0c, 0x18, 0x66, 0x7c],
'@': [0x00, 0x78, 0xc0, 0xde, 0xde, 0xde, 0xc6, 0x7c],
'A':[0x00, 0x7E, 0x09, 0x09, 0x09, 0x7E, 0x00, 0x00],  # Буква A
'B':[0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],  # Буква B
'C':[0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 0x00],  # Буква C
'D':[0x00, 0x7F, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00],  # Буква D
'E':[0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 0x00],  # Буква E
'F':[0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 0x00],  # Буква F
'G':[0x00, 0x3E, 0x41, 0x41, 0x51, 0x32, 0x00, 0x00],  # Буква G
'H':[0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x00],  # Буква H
'I':[0x00, 0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00],  # Буква I
'J':[0x00, 0x20, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00],  # Буква J
'K':[0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00],  # Буква K
'L':[0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00],  # Буква L
'M':[0x00, 0x7F, 0x02, 0x04, 0x02, 0x7F, 0x00, 0x00],  # Буква M
'N':[0x00, 0x7F, 0x02, 0x04, 0x08, 0x7F, 0x00, 0x00],  # Буква N
'O':[0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00],  # Буква O
'P':[0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 0x00],  # Буква P
'Q':[0x00, 0x3E, 0x41, 0x41, 0x51, 0x3E, 0x00, 0x00],  # Буква Q
'R':[0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, 0x00],  # Буква R
'S':[0x00, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x00],  # Буква S
'T':[0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00],  # Буква T
'U':[0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00],  # Буква U
'V':[0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 0x00],  # Буква V
'W':[0x00, 0x3F, 0x40, 0x20, 0x40, 0x3F, 0x00, 0x00],  # Буква W
'X':[0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00],  # Буква X
'Y':[0x00, 0x31, 0x0C, 0x03, 0x0C, 0x31, 0x00, 0x00],  # Буква Y
'Z':[0x00, 0x43, 0x45, 0x49, 0x51, 0x63, 0x00, 0x00],  # Буква Z
'[': [0x00, 0x41, 0x41, 0x7F, 0x7F, 0x00, 0x00, 0x00],
'\\': [0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80],
']': [0x00, 0x00, 0x41, 0x41, 0x7F, 0x7F, 0x00, 0x00],
'^': [0x00, 0x18, 0x3c, 0x66, 0x00, 0x00, 0x00, 0x00],
'_': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e],
'`': [0x00, 0x00, 0x06, 0x0c, 0x18, 0x00, 0x00, 0x00],
'a': [0x00, 0x24, 0x54, 0x54, 0x38, 0x40, 0x00, 0x00],
'b': [0x00, 0x7F, 0x28, 0x44, 0x44, 0x38, 0x00, 0x00],
'c': [0x00, 0x38, 0x44, 0x44, 0x44, 0x08, 0x00, 0x00],
'd': [0x00, 0x7f, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x00],
'e': [0x00, 0x7f, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00],
'f': [0x00, 0x7f, 0x44, 0x44, 0x44, 0x40, 0x00, 0x00],
'g': [0x00, 0x3e, 0x41, 0x41, 0x51, 0x3f, 0x00, 0x00],
'h': [0x00, 0x7f, 0x04, 0x04, 0x04, 0x7f, 0x00, 0x00],
'i': [0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00],
'j': [0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x01, 0x01],
'k': [0x00, 0x7f, 0x04, 0x14, 0x24, 0x00, 0x00, 0x00],
'l': [0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00],
'm': [0x00, 0x7f, 0x40, 0x20, 0x40, 0x7f, 0x00, 0x00],
'n': [0x00, 0x7f, 0x20, 0x10, 0x20, 0x7f, 0x00, 0x00],
'o': [0x00, 0x3e, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x00],
'p': [0x00, 0x7f, 0x45, 0x45, 0x45, 0x38, 0x00, 0x00],
'q': [0x00, 0x3e, 0x41, 0x41, 0x41, 0x3f, 0x01, 0x00],
'r': [0x00, 0x7f, 0x44, 0x44, 0x44, 0x7c, 0x00, 0x00],
's': [0x00, 0x39, 0x45, 0x45, 0x45, 0x22, 0x00, 0x00],
't': [0x00, 0x00, 0x40, 0x7f, 0x40, 0x00, 0x00, 0x00],
'u': [0x00, 0x3f, 0x40, 0x40, 0x40, 0x3f, 0x00, 0x00],
'v': [0x00, 0x1f, 0x20, 0x40, 0x20, 0x1f, 0x00, 0x00],
'w': [0x00, 0x3f, 0x40, 0x20, 0x40, 0x3f, 0x00, 0x00],
'x': [0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00],
'y': [0x00, 0x1f, 0x20, 0x20, 0x20, 0x1f, 0x00, 0x00],
'z': [0x00, 0x63, 0x53, 0x43, 0x63, 0x00, 0x00, 0x00],
'{': [0x00, 0x0e, 0x1e, 0x36, 0x36, 0x36, 0x1e, 0x0e],
'|': [0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18],
'}': [0x00, 0xe0, 0x70, 0x38, 0x38, 0x38, 0x70, 0xe0],
'~': [0x00, 0x00, 0x66, 0x66, 0x3c, 0x00, 0x00, 0x00]

    # Add more patterns here...
}

# Инициализация LCD дисплея 128x32
class lcd128_32:
    
    def __init__(self, dt, clk, bus, addr):
        self.addr = addr
        self.i2c = machine.I2C(bus, sda=machine.Pin(dt), scl=machine.Pin(clk))
        self.cursor = [0, 0]  # Инициализация курсора
        self.Init()
        
    def WriteByte_command(self, cmd):
        self.reg_write(0x00, cmd)
    
    def WriteByte_dat(self, dat):
        self.reg_write(0x40, dat)
    
    def reg_write(self, reg, data):
        msg = bytearray()
        msg.append(data)
        self.i2c.writeto_mem(self.addr, reg, msg)
    
    def Init(self):
        time.sleep(0.01)
        self.WriteByte_command(0xe2)
        time.sleep(0.01)
        self.WriteByte_command(0xa3)
        self.WriteByte_command(0xa0)
        self.WriteByte_command(0xc8)
        self.WriteByte_command(0x22)
        self.WriteByte_command(0x81)
        self.WriteByte_command(0x30)
        self.WriteByte_command(0x2c)
        self.WriteByte_command(0x2e)
        self.WriteByte_command(0x2f)
        self.Clear()
        self.WriteByte_command(0xff)
        self.WriteByte_command(0x72)
        self.WriteByte_command(0xfe)
        self.WriteByte_command(0xd6)
        self.WriteByte_command(0x90)
        self.WriteByte_command(0x9d)
        self.WriteByte_command(0xaf)
        self.WriteByte_command(0x40)
    
    def Clear(self):
        for i in range(4):
            self.WriteByte_command(0xb0 + i)
            self.WriteByte_command(0x10)
            self.WriteByte_command(0x00)
            for j in range(128):
                self.WriteByte_dat(0x00)
    
    def Cursor(self, y, x):
        if x > 17:
            x = 17
        if y > 3:
            y = 3
        self.cursor[0] = y
        self.cursor[1] = x
        
    def WriteFont(self, char):
        for item in MyASCII[char]:
            self.WriteByte_dat(item)
    
    def Display(self, text):
        self.WriteByte_command(0xb0 + self.cursor[0])
        self.WriteByte_command(0x10 + self.cursor[1] * 7 // 16)
        self.WriteByte_command(0x00 + self.cursor[1] * 7 % 16)
        for char in text:
            if char in MyASCII:
                self.WriteFont(char)
            else:
                self.WriteFont(' ')  # Печатает пробел для неизвестных символов

# Пример использования
lcd = lcd128_32(dt=20, clk=21, bus=0, addr=0x3f)
lcd.Clear()


lcd.Cursor(0, 4)
lcd.Display(" KONTAKTS")
lcd.Cursor(1, 5)
lcd.Display("TEST  LCD")
lcd.Cursor(2, 4)
lcd.Display("  ST7567A")
lcd.Cursor(3, 6)
lcd.Display(" 128*32")

"""
while True:
    scan_for_devices()
    time.sleep(0.5)
"""
