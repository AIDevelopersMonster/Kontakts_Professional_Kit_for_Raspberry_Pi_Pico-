# Video https://youtu.be/pKgo6jSqfeI
# Post http://kontakts.ru/showthread.php/40884?p=86141#post86141
from machine import Pin, ADC, PWM
from time import sleep

# Пин для подключения к модулю управления двигателем (например, A_1A)
A_1A_pin = 15  # Пин для подключения ШИМ к драйверу двигателя

# Пин для подключения потенциометра (ADC0 на GP26)
Pot_pin = 0  # ADC0 multiplexing pin is GP26

def setup():
    global A_1A
    global pot_ADC
    
    # Инициализация ШИМ для управления двигателем
    A_1A = PWM(Pin(A_1A_pin))  
    A_1A.freq(1000)  # Устанавливаем частоту работы драйвера на 1 кГц

    # Инициализация АЦП для чтения значения с потенциометра
    pot_ADC = ADC(Pot_pin)  # Подключаем пин для чтения значений с потенциометра

def loop():
    while True:  
        # Чтение значения с потенциометра и вывод его в консоль
        print('Potentiometer Value:', pot_ADC.read_u16())  # Выводим значение потенциометра

        # Считывание значения с потенциометра
        Value = pot_ADC.read_u16()  

        # Управление скоростью двигателя через ШИМ, используя значение с потенциометра
        A_1A.duty_u16(Value)  # Устанавливаем уровень ШИМ в зависимости от значения потенциометра

        # Задержка 0.2 секунды, чтобы не перегрузить процессор и стабилизировать работу
        sleep(0.2)  

if __name__ == '__main__':
    setup()  # Инициализация пинов и компонентов
    loop()   # Запуск основного цикла программы
