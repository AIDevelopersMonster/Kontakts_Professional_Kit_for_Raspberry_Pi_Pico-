# Video https://youtu.be/tG1ebDQZGl0
# Post http://kontakts.ru/showthread.php/40884?p=86131#post86131
from machine import Pin, ADC, PWM
from time import sleep

# Пины для подключения фоторезистора и лазера
photo = 26               # Пин для подключения фоторезистора (например, GP26)
LaserPin = 15            # Пин для управления лазером (например, GP15)

# Пины для RGB-светодиодов (используем пины 2, 3 и 4)
Led_R = PWM(Pin(2))      # Красный светодиод
Led_G = PWM(Pin(3))      # Зелёный светодиод
Led_B = PWM(Pin(4))      # Синий светодиод

# Настройка частоты для PWM
Led_R.freq(2000)   
Led_G.freq(2000)   
Led_B.freq(2000)   

# Параметры порогов
low_threshold = 50000    # Порог для красного светодиода (когда освещенность слишком сильная)
high_threshold = 5300    # Порог для зелёного светодиода (когда освещенность слишком слабая)

# Инициализация фоторезистора и лазера
def setup():
    global Laser
    global photo_ADC
    photo_ADC = ADC(photo)  # Создаём объект ADC для фоторезистора
    Laser = Pin(LaserPin, Pin.OUT)  # Создаём объект для управления лазером
    Laser.value(0)  # Изначально лазер выключен

# Главный цикл программы
def loop():
    while True:
        Laser.value(1)  # Включаем лазер
        Led_R.duty_u16(0)  # Красный светодиод выключен
        Led_G.duty_u16(65535)  # Зелёный светодиод включен (по умолчанию)
        Led_B.duty_u16(0)  # Синий светодиод выключен

        # Считываем интенсивность света с фоторезистора
        light_value = photo_ADC.read_u16()

        # Для отладки: выводим значение освещенности
        print("Light Value:", light_value)  # Покажет значение освещенности

        # Обработка интенсивности света с использованием if-elif-else
        if light_value > low_threshold:
            # Если интенсивность света слишком велика (освещенность слишком высокая), горит красный светодиод
            Led_R.duty_u16(65535)
            Led_G.duty_u16(0)
            Led_B.duty_u16(0)
            print("Red LED is ON (Low light)")  # Выводим в консоль информацию о текущем светодиоде

        elif high_threshold <= light_value <= low_threshold:
            # Если интенсивность света находится в нормальном диапазоне (средний уровень освещенности)
            Led_R.duty_u16(0)  # Красный светодиод включен для желтого
            Led_G.duty_u16(0)  # Зелёный светодиод включен для желтого
            Led_B.duty_u16(65535)  # Синий светодиод выключен
            print("Blue LED is ON ()")  # Выводим в консоль информацию о текущем светодиоде

        elif light_value < high_threshold:
            # Если интенсивность света слишком мала (освещенность слабая), горит зелёный светодиод
            Led_R.duty_u16(0)
            Led_G.duty_u16(65535)
            Led_B.duty_u16(0)
            print("Green LED is ON (High light)")  # Выводим в консоль информацию о текущем светодиоде

        sleep(0.1)  # Задержка для предотвращения перегрузки процессора

if __name__ == '__main__':
    setup()  # Инициализация
    loop()   # Запуск главного цикла
