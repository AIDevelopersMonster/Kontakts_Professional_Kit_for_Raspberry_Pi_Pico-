from machine import Pin, I2C
import time

# I2C-адреса для команд и дисплея
COMMAND_I2C_ADDRESS = 0x24
DISPLAY_I2C_ADDRESS = 0x34

# Таблица отображения символов для 7-сегментного дисплея
# Биты 0x00 - 0x7F
SEGMENTS_TABLE = [
    0x00, 0x86, 0x22, 0x49, 0x2D, 0x6B, 0x53, 0x46, 0x70, 0x0F, 0x63, 0x46, 0x80, 0x40, 0x80, 0x52,
    0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x09, 0x58, 0x58, 0x48, 0x4C, 0xA7,
    0x5D, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x7B, 0x74, 0x30, 0x0E, 0x75, 0x38, 0x55, 0x37, 0x5C,
    0x73, 0x67, 0x49, 0x6D, 0x78, 0x1C, 0x3E, 0x7E, 0x76, 0x6E, 0x5B, 0x02, 0x64, 0x39, 0x23, 0x08,
    0x02, 0x77, 0x7C, 0x58, 0x5E, 0x79, 0x71, 0x7B, 0x74, 0x30, 0x0E, 0x75, 0x38, 0x55, 0x54, 0x5C,
    0x73, 0x67, 0x50, 0x6D, 0x78, 0x1C, 0x3E, 0x7E, 0x76, 0x6E, 0x5B, 0x46, 0x30, 0x70, 0x41, 0x00
]

# Инициализация I2C
i2c = I2C(0, scl=Pin(21), sda=Pin(20), freq=100000)

# Функция записи на дисплей
def display_write(symbol, bit):
    if symbol <= 0x20:
        symbol = 0
    else:
        symbol -= 0x20  # вычитаем смещение, таблица с 0x20

    try:
        i2c.writeto(DISPLAY_I2C_ADDRESS + bit, bytearray([SEGMENTS_TABLE[symbol]]))
    except Exception as e:
        print(f"Error writing to display: {e}")

# Функция для отображения бегущей строки на дисплее
def display_string(s):
    for i in range(len(s) + 4):  # 4 позиции на дисплее
        for j in range(4):
            # Определяем, какой символ отображать на текущем разряде
            if i + j < len(s):
                display_write(ord(s[i + j]), j)
            else:
                display_write(0x20, j)  # Пустой символ, если вышли за пределы строки
        time.sleep(0.5)

# Цикл для бегущей строки с алфавитом
while True:
    display_string("HELLO RUN OFF ON 123456789 .... PUT CALL")  # Пример бегущей строки
